@import "./variables";

@mixin text-styles($size, $line-height, $font: "") {
  font-size: $size;
  line-height: $line-height;
  text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;

  @if $font == "Average" {
    font-family: "Average", "Georgia", serif;
  }

  @else if $font != "" {
    font-family: $font, "Arial", sans-serif;
  }
}

/* stylelint-disable */
@mixin transparent-background($imagePath) {
  content: "";
  background-image: url($imagePath);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0.1;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
}
/* stylelint-enable */

@mixin render-custom($rule-map) {
  @each $prop, $value in $rule-map {
    #{$prop}: #{$value};
  }
}

@mixin section() {
  display: block;
  max-width: 1080px;
  padding: 0 $min-margin;
  margin-right: auto;
  margin-left: auto;

  @include breakpoint(tablet) {
    width: 88.3%;
  }

  @include breakpoint(desktop-sm) {
    width: 83.9%;
  }

  @include breakpoint(desktop-lg) {
    width: 60.7%;
  }
}

@mixin home-and-section() {
  padding-top: 30px;

  .c-section {
    max-width: 1600px;

    &.with-rightRail {
      @include breakpoint(desktop-sm) {
        display: flex;

        .c-contentElements {
          width: calc(100% - 380px);
          float: left;
        }

        .c-rightRail {
          margin-right: 0;
        }
      }
    }
  }
}

//Container Mixins
@mixin blue-button($dimension, $content, $font-size) {
  background: linear-gradient(to top, #04befe, #4481eb);
  border-radius: 20px;
  min-width: $dimension;
  height: $dimension;
  position: relative;
  text-align: center;
  cursor: pointer;
  margin-right: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 4px 0 rgba(149, 149, 149, .5);

  &:after {
    content: $content;
    font-family: "icon-fonts";
    display: block;
    font-size: $font-size;
    color: #fff;
  }
}

// The pseudo :before element applied to all ad classes
// causes spacing issues in the story content well.
// This mixin can be used when ad spacing is required in content wells.
// Examples: story page, home and section pages in mobile view

@mixin arc-ad-spacing {

  .arc_ad {

    .arcad:not(:empty) {
      padding-top: 20px;
    }

    &.c-rightRail {

      .arcad {
        padding-top: 0;
      }
    }
  }
}

// styling for "full width" ads on home/section pages

@mixin arc-ad-full-width {
  padding: 20px 0;
  box-shadow: 0 2px 26px 4px rgba(0, 0, 0, .1);
  width: 100vw;

  &.c-HS02 {
    padding-bottom: 40px;

    @include breakpoint(desktop-sm) {
      padding-top: 0;
    }
  }

  .arcad:not(.HS02) {
    width: 100vw;
    max-width: 1600px;
    text-align: center;
    margin: 0 auto;

    > div,
    > iframe {
      margin-left: auto;
      margin-right: auto;
    }
  }

  @include breakpoint(tablet) {

    .arcad:not(.HS02) {
      margin: 0 auto;
      padding-bottom: 20px;
    }
  }
}

// applies sticky position to element(s), accepting a [top, right, bottom, left] position arg (which defaults to top: 0 if not otherwise specified).  There is extensive browser support except for IE (which we can gracefully degrade for): https://caniuse.com/#feat=css-sticky

// Example calls:
// for a desired TOP position of 10px, you would pass the following:
// @include position-sticky(10px);

// for a desired RIGHT position of 20px, you would pass the following:
// @include position-sticky(null, 20px);

// for a desired BOTTOM position of 30px, you would pass the following:
// @include position-sticky(null, null, 30px);

// with a desired LEFT position of 40px, you would pass the following:
// @include position-sticky(null, null, null, 40px);

@mixin position-sticky($top_position: 0, $right_position: null, $bottom_position: null, $left_position: null) {
  @if $top_position {
    top: $top_position;
  }

  @if $right_position {
    right: $right_position;
  }

  @if $bottom_position {
    bottom: $bottom_position;
  }

  @if $left_position {
    left: $left_position;
  }

  -webkit-position: sticky;
  position: sticky;
}

// /* Amp */
@mixin amp-exclude {
  @if $is-amp == false {
    @content;
  }
}

@mixin amp-only {
  @if $is-amp == true {
    @content;
  }
}

@mixin advertisement-label {

  &:before {
    content: "Advertisement";
    position: absolute;
    color: #313132;

    @include text-styles(.75rem, 1, "Gordita");

    font-weight: 500;
    left: 50%;
    transform: translate(-50%, -20px);
  }
}
